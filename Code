# Imports
!pip install lazypredict

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from lazypredict.Supervised import LazyRegressor
from sklearn.experimental import enable_iterative_imputer #If you need to fill in missing data
from sklearn.impute import IterativeImputer #If you need to fill in missing data

#Connect to Google Drive (Google Colab)
from google.colab import drive
drive.mount('/content/drive')

#Load the data
train_df = pd.read_csv('/content/drive/My Drive/Training Data.csv',header=0)

##Preprocessing, cleaning, and imputation of training data
#Remove the row label column in the training and testing data sets
train_df.drop(train_df.columns[0], axis=1, inplace=True)

#Drop target column, and assign target column
y_train = train_df['tgt']
train_df.pop('tgt')

# Scaling of data
scaler = StandardScaler()
scaler.fit(train_df)
train_df = scaler.transform(train_df)

##80/20 split, along with scoreboard and evaluation of the models

# Create a synthetic regression dataset
x = train_df
y = y_train
x_train_Ev, x_test_Ev, y_train_Ev, y_test_Ev = train_test_split(x, y, test_size=0.2, random_state=42)

# Initialize LazyRegressor
reg = LazyRegressor(verbose=0, ignore_warnings=True, custom_metric=None)

# Fit and train models
models, predictions = reg.fit(x_train_Ev, x_test_Ev, y_train_Ev, y_test_Ev)

# Display results
print(models)

